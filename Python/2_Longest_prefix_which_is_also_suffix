// Given a string s, find the length of the longest prefix, which is also a suffix. 
// The prefix and suffix should not overlap.

// Input : aabcdaabc
// Output : 4
// The string "aabc" is the longest
// prefix which is also suffix.

// Input : abcab
// Output : 2

// Input : aaaa
// Output : 2

def longestPrefixSuffix(s) :
    n = len(s)
    for res in range(n // 2, 0, -1):
        # Check for shorter lengths
        # of first half.
        prefix = s[0: res]
        suffix = s[n - res: n]
         
        if (prefix == suffix) :
            return res
             
    # if no prefix and suffix match
    # occurs
    return 0
     
if __name__ == "__main__":
    s = "blablabla"
    print(longestPrefixSuffix(s))
